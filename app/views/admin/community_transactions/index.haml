- content_for :title_header do
  %h1= t("layouts.admin.admin")

= render :partial => "admin/left_hand_navigation", :locals => { :links => admin_links_for(@current_community) }

.left-navi-section
  %h2= t("admin.communities.transactions.transactions", community_name: community.name(I18n.locale))

  %span#admin_transactions_count= page_entries_info(conversations, :model => "Transaction")
  %p
    Download
    = link_to('CSV', admin_community_transactions_path(@current_community, per_page: 1000, sort: "last_activity", direction: "desc", format: 'csv'))

  %table#admin_transactions
    %thead
      %tr
        %th= render partial: "layouts/sort_link", locals: { column: "listing", direction: sort_link_direction("listing"), title: t("admin.communities.transactions.headers.listing") }
        %th=t("admin.communities.transactions.headers.whats_missing")
        %th=t("admin.communities.transactions.headers.status")
        %th= "Actions"
        - if show_status_and_sum
          %th=t("admin.communities.transactions.headers.sum")
        %th= render partial: "layouts/sort_link", locals: { column: "started", direction: sort_link_direction("started"), title: t("admin.communities.transactions.headers.started") }
        %th= render partial: "layouts/sort_link", locals: { column: "last_activity", direction: sort_link_direction("last_activity"), title: t("admin.communities.transactions.headers.last_activity") }
        %th=t("admin.communities.transactions.headers.initiated_by")
        %th=t("admin.communities.transactions.headers.other_party")
        %th=t("admin.communities.transactions.headers.booking_at")

    %tbody
      - conversations.each do |conversation|
        %tr
          %td=Maybe(conversation[:listing]).map { |listing| link_to_unless(listing[:deleted], listing[:title], conversation[:listing_url]) }.or_else("")
          %td= PrerequisiteService.missing(conversation[:__model].listing).map { |option| option.title(I18n.locale) }.join(", ")
          %td=t("admin.communities.transactions.status.#{conversation[:status]}")
          %td
            - if conversation[:status] == "booked"
              - complete_action = admin_community_transaction_path(community_id: @current_community.id, id: conversation[:id])
              = button_to "Complete", complete_action, method: :put, data: {confirm: 'Are you sure?'}

              = button_to "Cancel", cancel_admin_community_transaction_path(community_id: @current_community.id, id: conversation[:id]), method: :put, data: {confirm: 'Are you sure?'}

          - if show_status_and_sum
            %td=conversation[:payment_total] ? humanized_money_with_symbol(conversation[:payment_total]) : ""
          %td=l(conversation[:created_at], format: :short_date)
          %td=l(last_activity_at(conversation), format: :short_date)
          %td
            = Maybe(conversation[:starter]).map { |p| link_to_unless(p[:is_deleted], p[:display_name], p[:url]) }.or_else("")
            - if conversation[:testimonial_from_starter]
              = " &nbsp; ".html_safe
              = icon_tag('check')
          %td
            = Maybe(conversation[:author]).map { |p| link_to_unless(p[:is_deleted], p[:display_name], p[:url]) }.or_else("")
            - if conversation[:testimonial_from_author]
              = " &nbsp; ".html_safe
              = icon_tag('check')
          %td=Maybe(conversation[:booking]).map { |p| l(conversation[:booking].start_at, format: :short) }.or_else("")
  .row
    .col-12
      = will_paginate conversations
